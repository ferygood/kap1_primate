This script execute code to find overlap between rmcorr results and chipseq peak result.

```{r}
library(dplyr)
library(tidyr)
library(GenomicRanges)
```

First load the data,

```{r}
hmcorr <- read.csv("../../tables/hm_rmcorr_result.csv") # human rmcorr result
chipexo_tableS6 <- read.csv("../../tables/chipexo_TableS6_sig.csv")
```

```{r}
hmcorr_process <- hmcorr %>% 
    select(c(2,3,4,7)) %>%
    mutate(pair = paste0(teName.y, ":", geneName)) %>%
    filter(pair %in% chipexo_tableS6$pair) #745

unique_kznfs <- unique(hmcorr_process$geneName) #62

hmcorr_modified <- hmcorr_process %>%
    separate(teName, into = c("chr", "start", "end", "rest"), sep="\\|", remove = FALSE)

hmcorr_modified$start <- as.numeric(hmcorr_modified$start)
hmcorr_modified$end <- as.numeric(hmcorr_modified$end)

# create GRange for correlation result
gr_rmcorr <- GRanges(
    seqnames = hmcorr_modified$chr,
    ranges = IRanges(start = hmcorr_modified$start,
                     end = hmcorr_modified$end))
```

```{r}
chipexo <- read.table("../../chip-exo/GSM2466477_ZNF135_peaks_processed_score_signal_exo.bed")
```

```{r}
# Initialize an empty data frame to store overlap results
df_overlap <- data.frame()

for (kznf in unique_kznfs) {
    # Define the file path
    path <- "~/github/kap1_primate/chip-exo/"
    
    # Get the list of files in the directory
    files <- list.files(path, full.names = TRUE)
    
    # Find files containing the kznf name
    matching_files <- files[grepl(kznf, basename(files), ignore.case = TRUE)]
    
    # If matching files are found, process them
    if (length(matching_files) > 0) {
        cat("Processing file for ", kznf, "\n")
        
        # Loop through all matching files for the current kznf
        for (file in matching_files) {
            # Read the ChIP-exo file
            chipexo <- read.table(file, header = FALSE)
            
            # Create a GRanges object for ChIP-exo data
            gr_chipexo <- GRanges(
                seqnames = chipexo$V1,
                ranges = IRanges(start = chipexo$V2, 
                                 end = chipexo$V3)
            )
            
            # Find overlaps between hmcorr (rmcorr) and ChIP-exo regions
            overlap <- findOverlaps(gr_rmcorr, gr_chipexo)
            
            # Extract corresponding rows from both datasets
            overlap_corr <- hmcorr_modified[queryHits(overlap),]
            overlap_chipexo <- chipexo[subjectHits(overlap), ] 
            
            if (nrow(overlap_corr)>0){
                # Merge overlapping data and append to the result
                df_merge <- cbind(overlap_corr, overlap_chipexo)
                df_overlap <- rbind(df_overlap, df_merge)
            }
        }
        
    } else {
        cat("No files found for", kznf, "\n")
    }
}

# Print a summary of the results
cat("Total overlaps identified:", nrow(df_overlap), "\n")

```

save the table
```{r}
write.csv(df_overlap, file="../../tables/human_153_pair.csv", row.names=F)
```


There are total 153 overlaps identified in the data. There are 28 unique KRAB-ZNFs and 34 unique TEs. In total, there are 65 link. (Unfortunately, there is no overlap with our KAP1 ChIP-seq result)

Next, we try to draw a network for visualization,
I try to method, one is locus-specific TEs, the other is TE subfamily
```{r}
library(RCy3)

df_overlap_add <- df_overlap %>%
    mutate(teChr = paste(teName.y, "-", chr))

node_locus <- data.frame(
    id=c(unique(df_overlap_add$geneName), unique(df_overlap_add$teChr))
)

link <- df_overlap_add[,c(1,16,7)]
colnames(link) <- c("source", "target", "coefficient")

createNetworkFromDataFrames(node_locus, link)
```

